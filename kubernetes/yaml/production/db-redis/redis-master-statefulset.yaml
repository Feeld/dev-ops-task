---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: db-redis-master
  labels:
    app: db-redis
spec:
  selector:
    matchLabels:
      role: master
      app: db-redis
  serviceName: db-redis-headless
  template:
    metadata:
      labels:
        role: master
        app: db-redis

      annotations:
        checksum/health: b1e03a7e299df7ade6f071271a94587603d6da9759f48dc73c1def4ba77e8343
        checksum/configmap: bd6c7dfec70ad5f2597854f266123cd152281c436f3724cabbcfa3fbde1813d7
        checksum/secret: eb2c4e6ca09b9c43f162d2660c438719479511ed60f1ef4f61d8de13ec361d1f
        prometheus.io/port: "9121"
        prometheus.io/scrape: "true"

    spec:
      securityContext:
        fsGroup: 1001
      serviceAccountName: "db-redis"
      containers:
        - name: db-redis
          image: "docker.io/bitnami/redis:5.0.5-debian-9-r124"
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          command:
            - /bin/bash
            - -c
            - |
              if [[ -n $REDIS_PASSWORD_FILE ]]; then
                password_aux=`cat ${REDIS_PASSWORD_FILE}`
                export REDIS_PASSWORD=$password_aux
              fi
              if [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then
                cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf
              fi
              if [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then
                cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
              fi
              ARGS=("--port" "${REDIS_PORT}")
              ARGS+=("--requirepass" "${REDIS_PASSWORD}")
              ARGS+=("--masterauth" "${REDIS_PASSWORD}")
              ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
              ARGS+=("--include" "/opt/bitnami/redis/etc/master.conf")
              /run.sh ${ARGS[@]}
          env:
            - name: REDIS_REPLICATION_MODE
              value: master
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-redis
                  key: db-redis-password
            - name: REDIS_PORT
              value: "6379"
          ports:
            - name: redis
              containerPort: 6379
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /health/ping_liveness_local.sh 5
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /health/ping_readiness_local.sh 5
          resources:
            requests:
              cpu: 100m
              memory: 128Mi

          volumeMounts:
            - name: health
              mountPath: /health
            - name: data
              mountPath: /data
              subPath: ""
            - name: config
              mountPath: /opt/bitnami/redis/mounted-etc
            - name: redis-tmp-conf
              mountPath: /opt/bitnami/redis/etc/
        - name: metrics
          image: docker.io/bitnami/redis-exporter:1.1.0-debian-9-r16
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/bash
            - -c
            - |
              if [[ -f '/secrets/redis-password' ]]; then
               export REDIS_PASSWORD=$(cat /secrets/redis-password)
              fi
              redis_exporter
          args:
          env:
            - name: REDIS_ALIAS
              value: db-redis
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-redis
                  key: db-redis-password
          volumeMounts:
          ports:
            - name: metrics
              containerPort: 9121
          resources:
            requests:
              cpu: 100m
              memory: 128Mi

      initContainers:
        - name: volume-permissions
          image: "docker.io/bitnami/minideb:stretch"
          imagePullPolicy: "Always"
          command: ["/bin/chown", "-R", "1001:1001", "/data"]
          securityContext:
            runAsUser: 0
          resources:
            requests:
              cpu: 100m
              memory: 128Mi

          volumeMounts:
            - name: data
              mountPath: /data
              subPath: ""
        - name: init-sysctl
          image: docker.io/bitnami/minideb:stretch
          imagePullPolicy: "Always"
          resources:
            requests:
              cpu: 100m
              memory: 128Mi

          command: []

          securityContext:
            privileged: true
            runAsUser: 0
      volumes:
        - name: health
          configMap:
            name: db-redis-health
            defaultMode: 0755
        - name: config
          configMap:
            name: db-redis
        - name: redis-tmp-conf
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app: "redis"
          component: "master"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"

  updateStrategy:
    type: RollingUpdate
