---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: "db-postgres-slave"
  labels:
    app: db-postgres
spec:
  serviceName: db-postgres-headless
  replicas: 1
  selector:
    matchLabels:
      app: db-postgres
      role: slave
  template:
    metadata:
      name: db-postgres
      labels:
        app: db-postgres
        role: slave
    spec:
      securityContext:
        fsGroup: 1001
      serviceAccountName: db-postgres
      initContainers:
        - name: init-chmod-data
          image: docker.io/bitnami/minideb:stretch
          imagePullPolicy: "Always"
          resources:
            requests:
              cpu: 100m
              memory: 128Mi

          command:
            - sh
            - -c
            - |
              mkdir -p /bitnami/postgresql/data
              chmod 700 /bitnami/postgresql/data
              find /bitnami/postgresql -mindepth 1 -maxdepth 1 -not -name ".snapshot" -not -name "lost+found" | \
                xargs chown -R 1001:1001
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: data
              mountPath: /bitnami/postgresql
              subPath: ""
      containers:
        - name: db-postgres
          image: docker.io/bitnami/postgresql:11.5.0-debian-9-r26
          imagePullPolicy: "IfNotPresent"
          resources:
            requests:
              cpu: 100m
              memory: 128Mi

          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            - name: POSTGRES_REPLICATION_MODE
              value: "slave"
            - name: POSTGRES_REPLICATION_USER
              value: "db_postgres_repl"
            - name: POSTGRES_REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-postgres
                  key: db-postgres-replication-password
            - name: POSTGRES_CLUSTER_APP_NAME
              value: db_daemon
            - name: POSTGRES_MASTER_HOST
              value: db-postgres
            - name: POSTGRES_MASTER_PORT_NUMBER
              value: "5432"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-postgres
                  key: db-postgres-password
          ports:
            - name: postgres
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready -U "db_daemon" -d "db_daemon" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  pg_isready -U "db_daemon" -d "db_daemon" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: data
              mountPath: /bitnami/postgresql
              subPath: ""
            - name: db-postgres-config
              mountPath: /bitnami/postgresql/conf
      volumes:
        - name: db-postgres-config
          configMap:
            name: db-postgres-configuration
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
